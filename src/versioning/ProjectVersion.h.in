#ifndef VERSION_H_IN
#define VERSION_H_IN

#include <string>
#include <string_view>
#include <templates/singleton/Singleton.h>
#include <versioning/Version.h>

namespace otus_hw_2 {

//https://community.gigperformer.com/t/getting-cmake-variables-from-c/17711
//https://www.modernescpp.com/index.php/thread-safe-initialization-of-a-singleton/

//clang
//static analyzers


	class ProjectVersion {

		friend class Singleton<ProjectVersion>;

	private:

		static constexpr std::string_view ProjectVersionMajor = "@PROJECT_VERSION_MAJOR@";
		static constexpr std::string_view ProjectVersionMinor = "@PROJECT_VERSION_MINOR@";
		static constexpr std::string_view ProjectVersionBuild = "@PROJECT_VERSION_BUILD@";

		static constexpr Version VersionOfProject = Version(ProjectVersionMajor, ProjectVersionMinor, ProjectVersionBuild);


	public:

		[[nodiscard]] static constexpr Version GetVersion() {
			return VersionOfProject;
		}

	};

	typedef Singleton<otus_hw_2::ProjectVersion> VersionProvider;
}


#endif // VERSION_H_IN